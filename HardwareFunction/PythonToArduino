import torch
import serial
import time
import cv2

# Load YOLOv5 model
model = torch.hub.load('ultralytics/yolov5', 'custom', path=r"C:\Users\agina\Downloads\exp10\weights\best.pt")

# Set up serial communication with Arduino (COM4, 9600 baud rate)
arduino = serial.Serial('COM4', 9600)
time.sleep(2)  # Wait for Arduino to initialize

# Open webcam
cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    if not ret:
        continue

    # Perform detection
    results = model(frame)

    # Convert results to tensor
    detections = results.xyxy[0]  # Extract bounding box coordinates

    # If any object is detected, send "1", else send "0"
    if len(detections) > 0:
        arduino.write(b'1')  # Send '1' to Arduino
        print("Object detected! LED ON")
    else:
        arduino.write(b'0')  # Send '0' to Arduino
        print("No object detected. LED OFF")

    # Draw bounding boxes
    for *box, conf, cls in detections.tolist():
        x1, y1, x2, y2 = map(int, box)  # Convert box coordinates to integers
        label = f"{model.names[int(cls)]} {conf:.2f}"  # Get class name and confidence

        # Draw rectangle and label
        cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
        cv2.putText(frame, label, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

    # Display the frame with detections
    cv2.imshow("Detection", frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Clean up
cap.release()
cv2.destroyAllWindows()
arduino.close()
